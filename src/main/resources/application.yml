spring:
    datasource:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/nhmp?serverTimezone=UTC&characterEncoding=UTF-8
        username: KMJ # 나중에 파일로 등록하는 방식으로 수정해야함
        password: index8246! # 나중에 파일로 등록하는 방식으로 수정해야함
    thymeleaf:
        cache: false # 개발시 새로고침시 적용
        prefix: classpath:/templates/ # 접두어 classpath:templates/ 가 default
        check-template-location: true # 정적 파일 경로
        suffix: .html # 접미어
    devtools:
        livereload:
            enabled: true # 정적 리소스에 변화가 있을 때 바로 반영한다.
    output:
        ansi:
            enabled: always # 콘솔에 색상 적용하기

# 클래스 경로의 루트(src\main\resources)
# 현재 디렉토리
# 패키지 /config 클래스 패스에서
# /config 현재 디렉토리의 하위 디렉토리

#    [ TRACE < DEBUG < INFO < WARN < ERROR ]
#    [1] ERROR : 요청을 처리하는 중 오류가 발생한 경우
#    [2] WARN : 시스템 에러의 원인이 될 수 있는 경고성 메시지
#    [3] INFO : 상태 변경과 같은 정보성 로그
#    [4] DEBUG : 프로그램을 디버깅하기 위한 정보
#    [5] TRACE : 추적 레벨은 Debug보다 훨씬 상세한 정보

logging:
    level:
    # hibernate 가 남기는 모든 로그가 debug 모드로 설정
    # jpa hibernate가 생성하는 sql이 로거를 통해서 찍히도록 하는 설정
        "[org.hibernate.sql]": info
        "[org.hibernate.type]": debug

# maximum pool size (pool에 유지시킬 수 있는 최대 커넥션 수 default:10)
spring.datasource.hikari.maximum-pool-size: 10
# 연결되었는지 확인을 위한 초기 쿼리
spring.datasource.hikari.connection-init-sql: SELECT 1 FROM DUAL
# pool에서 일을 안하는 커넥션을 유지하는 시간 (최솟값 : 10000ms / default : 600000ms(10minutes))
spring.datasource.hikari.idleTimeout: 10000
# poo;에서 커넥션을 얻어오기 전까지 기다리는 최대시간 (최솟값 : 250ms / default : 30000ms(30s))
spring.datasource.hikari.connection-timeout: 10000
# valid 쿼리를 통해 커넥션이 유효한지 검사할 때 사용되는 timeout (최솟값 : 250ms / default : 5000ms)
spring.datasource.hikari.validation-timeout: 10000
# 커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명 시간 (default : 1800000ms(30minutes))
spring.datasource.hikari.maxLifetime: 580000

